apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'

cordapp {
    targetPlatformVersion 4
    minimumPlatformVersion 4
    contract {
        name "Template Contract"
        vendor "Corda Open Source"
        licence "A liberal, open source licence"
        versionId 1
    }
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"

    // Corda dependencies.
    cordaCompile "$tokens_release_group:tokens-workflows:$tokens_release_version"
    cordaCompile "$tokens_release_group:tokens-contracts:$tokens_release_version"
    cordaCompile "$tokens_release_group:tokens-money:$tokens_release_version"
    cordaCompile "$corda_release_distribution:corda-finance-contracts:$corda_release_version"
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
    cordaCompile project(":oracleClient")
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}

// We need this because log4j2.xml is pulled in from multiple dependency JARs.
// JAR signing will fail if there are multiple files with the same name.
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
} 